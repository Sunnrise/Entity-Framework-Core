using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations.Schema;

ApplicationDbContext context = new();

#region What is the Generated Value ?
// Generated Value is a value that is automatically generated by the database or the application.
#endregion

#region Default Values
// Default values are the values that are automatically assigned to a column when a new row is inserted into the table.
#region HasDefaultValue
//Static value that will be used as the default value.
#endregion

#region HasDefaultValueSql
//SQL query that will be executed to get the default value.
#endregion

#endregion

#region Computed Columns

#region HasComputedColumnSql

#endregion

#endregion

#region Value Generation

#region Primary Keys

#endregion

#region Identity

#endregion

#region DatabaseGenerated

#region DatabaseGeneratedOption.None - ValueGeneratedNever

#endregion

#region DatabaseGeneratedOption.Identity - ValueGeneratedOnAdd

#region Numeric Types

#endregion

#region Non-Numeric Types

#endregion

#endregion

#region DatabaseGeneratedOption.Computed - ValueGeneratedOnAddOrUpdate

#endregion

#endregion

#endregion

Person o = new()
{
    Name = "Alperen",
    Surname = "Gunes",
    Premium = 100,
    TotalGain = 200,
    PersonCode = 1

};
await context.Persons.AddAsync(o);
await context.SaveChangesAsync();


class Person
{
    
    public int PersonId { get; set; }
    public string Name { get; set; }
    public string Surname { get; set; }
    public int Premium { get; set; }
    public int Salary { get; set; }
    public int TotalGain { get; set; }
    public int PersonCode { get; set; }
}

class ApplicationDbContext : DbContext
{
    public DbSet<Person> Persons { get; set; }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
       modelBuilder.Entity<Person>()
            .Property(p => p.Salary)
            .HasDefaultValueSql("FLOOR(RAND() * 1000)");
        //.HasDefaultValue(100);
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        optionsBuilder.UseSqlServer("Server=localhost, 1433;Database=ApplicationDb;User Id=sa;Password=Password1;TrustServerCertificate=True");
    }
}